!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
. Install	README.md	/^## Install$/;"	h
. Intro	README.md	/^## Intro$/;"	h
. Usage	README.md	/^## Usage$/;"	h
.GitHub.vim	README.md	/^# GitHub.vim$/;"	h
COVIMERAGE	Makefile	/^COVIMERAGE=$(shell command -v ccovimerage 2>\/dev\/null || echo build\/covimerage\/bin\/covimerage)$/;"	m
GetEvent	autoload/github/api/issues.vim	/^function! s:GetEvent(event) abort$/;"	f
User.New	autoload/github/api/obj.vim	/^function! s:User.New(json) abort$/;"	f
User.ToString	autoload/github/api/obj.vim	/^function! s:User.ToString() abort$/;"	f
g:GitHub_api_plugin_loaded	plugin/github.vim	/^let g:GitHub_api_plugin_loaded = 1$/;"	v
g:github#api#obj#User	autoload/github/api/obj.vim	/^let g:github#api#obj#User = copy(s:User)$/;"	v
g:githubapi_root_url	plugin/github.vim	/^let g:githubapi_root_url = 'https:\/\/api.github.com\/'$/;"	v
getArgv	autoload/github/api/search.vim	/^fu! s:getArgv(args,base) abort$/;"	f
github#ListAllOrgs	autoload/github.vim	/^function! github#ListAllOrgs(since) abort$/;"	f
github#api#activity#CheckStarred	autoload/github/api/activity.vim	/^function! github#api#activity#CheckStarred(owner,repo,user,password) abort$/;"	f
github#api#activity#Check_repo_Sub	autoload/github/api/activity.vim	/^function! github#api#activity#Check_repo_Sub(owner,repo,user,password) abort$/;"	f
github#api#activity#Del_repo_sub	autoload/github/api/activity.vim	/^function! github#api#activity#Del_repo_sub(owner,repo,user,password) abort$/;"	f
github#api#activity#Del_thread_sub	autoload/github/api/activity.vim	/^function! github#api#activity#Del_thread_sub(id,user,password) abort$/;"	f
github#api#activity#Get_thread	autoload/github/api/activity.vim	/^function! github#api#activity#Get_thread(id,user,password) abort$/;"	f
github#api#activity#Get_thread_sub	autoload/github/api/activity.vim	/^function! github#api#activity#Get_thread_sub(id,user,password) abort$/;"	f
github#api#activity#List_auth_watched_repo	autoload/github/api/activity.vim	/^function! github#api#activity#List_auth_watched_repo(user,password) abort$/;"	f
github#api#activity#List_events	autoload/github/api/activity.vim	/^function! github#api#activity#List_events() abort$/;"	f
github#api#activity#List_net_events	autoload/github/api/activity.vim	/^function! github#api#activity#List_net_events(owner,repo) abort$/;"	f
github#api#activity#List_notifications	autoload/github/api/activity.vim	/^function! github#api#activity#List_notifications(user,password) abort$/;"	f
github#api#activity#List_notifications_for_repo	autoload/github/api/activity.vim	/^function! github#api#activity#List_notifications_for_repo(onwer,repo,user,password) abort$/;"	f
github#api#activity#List_org_events	autoload/github/api/activity.vim	/^function! github#api#activity#List_org_events(org) abort$/;"	f
github#api#activity#List_public_user_events	autoload/github/api/activity.vim	/^function! github#api#activity#List_public_user_events(user) abort$/;"	f
github#api#activity#List_repo_events	autoload/github/api/activity.vim	/^function! github#api#activity#List_repo_events(owner,repo) abort$/;"	f
github#api#activity#List_stargazers	autoload/github/api/activity.vim	/^function! github#api#activity#List_stargazers(owner,repo, ...) abort$/;"	f
github#api#activity#List_user_events	autoload/github/api/activity.vim	/^function! github#api#activity#List_user_events(user) abort$/;"	f
github#api#activity#List_user_org_events	autoload/github/api/activity.vim	/^function! github#api#activity#List_user_org_events(user,org,password) abort$/;"	f
github#api#activity#List_watched_repo	autoload/github/api/activity.vim	/^function! github#api#activity#List_watched_repo(user) abort$/;"	f
github#api#activity#List_watchers	autoload/github/api/activity.vim	/^function! github#api#activity#List_watchers(owner,repo) abort$/;"	f
github#api#activity#Mark_All_as_read	autoload/github/api/activity.vim	/^function! github#api#activity#Mark_All_as_read(user,password,last_read_at) abort$/;"	f
github#api#activity#Mark_All_as_read_for_repo	autoload/github/api/activity.vim	/^function! github#api#activity#Mark_All_as_read_for_repo(owner,repo,user,password,last_read_at) abort$/;"	f
github#api#activity#Mark_thread	autoload/github/api/activity.vim	/^function! github#api#activity#Mark_thread(id,user,password) abort$/;"	f
github#api#activity#Performed_events	autoload/github/api/activity.vim	/^function! github#api#activity#Performed_events(user) abort$/;"	f
github#api#activity#Performed_public_events	autoload/github/api/activity.vim	/^function! github#api#activity#Performed_public_events(user) abort$/;"	f
github#api#activity#Set_repo_sub	autoload/github/api/activity.vim	/^function! github#api#activity#Set_repo_sub(owner,repo,user,password,sub,ignore) abort$/;"	f
github#api#activity#Set_thread_sub	autoload/github/api/activity.vim	/^function! github#api#activity#Set_thread_sub(id,user,password,subscribed,ignored) abort$/;"	f
github#api#activity#Star	autoload/github/api/activity.vim	/^function! github#api#activity#Star(owner,repo,user,password) abort$/;"	f
github#api#activity#Unstar	autoload/github/api/activity.vim	/^function! github#api#activity#Unstar(owner,repo,user,password) abort$/;"	f
github#api#cache#Update	autoload/github/api/cache.vim	/^function! github#api#cache#Update() abort$/;"	f
github#api#gist#CheckStar	autoload/github/api/gist.vim	/^function! github#api#gist#CheckStar(user,password,id) abort$/;"	f
github#api#gist#Create	autoload/github/api/gist.vim	/^function! github#api#gist#Create(desc,filename,content,public,user,password) abort$/;"	f
github#api#gist#CreateComment	autoload/github/api/gist.vim	/^function! github#api#gist#CreateComment(id,user,password,body) abort$/;"	f
github#api#gist#Del	autoload/github/api/gist.vim	/^function! github#api#gist#Del(user,password,id) abort$/;"	f
github#api#gist#DelComment	autoload/github/api/gist.vim	/^function! github#api#gist#DelComment(gistid,id,user,password) abort$/;"	f
github#api#gist#Edit	autoload/github/api/gist.vim	/^function! github#api#gist#Edit(desc,filename,content,public,user,password,id) abort$/;"	f
github#api#gist#EditComment	autoload/github/api/gist.vim	/^function! github#api#gist#EditComment(id,user,password,body) abort$/;"	f
github#api#gist#Fork	autoload/github/api/gist.vim	/^function! github#api#gist#Fork(user,password,id) abort$/;"	f
github#api#gist#GetComment	autoload/github/api/gist.vim	/^function! github#api#gist#GetComment(gistid,commentid) abort$/;"	f
github#api#gist#GetSingle	autoload/github/api/gist.vim	/^function! github#api#gist#GetSingle(id) abort$/;"	f
github#api#gist#GetSingleSha	autoload/github/api/gist.vim	/^function! github#api#gist#GetSingleSha(id,sha) abort$/;"	f
github#api#gist#List	autoload/github/api/gist.vim	/^function! github#api#gist#List(user) abort$/;"	f
github#api#gist#ListAll	autoload/github/api/gist.vim	/^function! github#api#gist#ListAll(user,password) abort$/;"	f
github#api#gist#ListComments	autoload/github/api/gist.vim	/^function! github#api#gist#ListComments(id) abort$/;"	f
github#api#gist#ListCommits	autoload/github/api/gist.vim	/^function! github#api#gist#ListCommits(id) abort$/;"	f
github#api#gist#ListFork	autoload/github/api/gist.vim	/^function! github#api#gist#ListFork(user,password,id) abort$/;"	f
github#api#gist#ListPublic	autoload/github/api/gist.vim	/^function! github#api#gist#ListPublic(since) abort$/;"	f
github#api#gist#ListStarred	autoload/github/api/gist.vim	/^function! github#api#gist#ListStarred(user,password,since) abort$/;"	f
github#api#gist#Star	autoload/github/api/gist.vim	/^function! github#api#gist#Star(user,password,id) abort$/;"	f
github#api#gist#Unstar	autoload/github/api/gist.vim	/^function! github#api#gist#Unstar(user,password,id) abort$/;"	f
github#api#issues#Addassignee	autoload/github/api/issues.vim	/^function! github#api#issues#Addassignee(owner,repo,num,assignees,user,password) abort$/;"	f
github#api#issues#Check_assignee	autoload/github/api/issues.vim	/^function! github#api#issues#Check_assignee(owner,repo,assignee) abort$/;"	f
github#api#issues#Create	autoload/github/api/issues.vim	/^function! github#api#issues#Create(owner,repo,user,password,issue) abort$/;"	f
github#api#issues#CreateMilestone	autoload/github/api/issues.vim	/^function! github#api#issues#CreateMilestone(owner,repo,milestone,user,password) abort$/;"	f
github#api#issues#Create_comment	autoload/github/api/issues.vim	/^function! github#api#issues#Create_comment(owner,repo,num,json,user,password) abort$/;"	f
github#api#issues#DeleteMilestone	autoload/github/api/issues.vim	/^function! github#api#issues#DeleteMilestone(owner,repo,num,user,password) abort$/;"	f
github#api#issues#Delete_comment	autoload/github/api/issues.vim	/^function! github#api#issues#Delete_comment(owner,repo,id,user,password) abort$/;"	f
github#api#issues#Edit	autoload/github/api/issues.vim	/^function! github#api#issues#Edit(owner,repo,num,user,password,issue) abort$/;"	f
github#api#issues#Edit_comment	autoload/github/api/issues.vim	/^function! github#api#issues#Edit_comment(owner,repo,id,json,user,password) abort$/;"	f
github#api#issues#GetSingleMilestone	autoload/github/api/issues.vim	/^function! github#api#issues#GetSingleMilestone(owner,repo,num) abort$/;"	f
github#api#issues#Get_comment	autoload/github/api/issues.vim	/^function! github#api#issues#Get_comment(owner,repo,id) abort$/;"	f
github#api#issues#Get_event	autoload/github/api/issues.vim	/^function! github#api#issues#Get_event(owner,repo,id) abort$/;"	f
github#api#issues#Get_issue	autoload/github/api/issues.vim	/^function! github#api#issues#Get_issue(owner,repo,num) abort$/;"	f
github#api#issues#ListAllMilestones	autoload/github/api/issues.vim	/^function! github#api#issues#ListAllMilestones(owner,repo,state,sort,direction) abort$/;"	f
github#api#issues#List_All	autoload/github/api/issues.vim	/^function! github#api#issues#List_All(user,password) abort$/;"	f
github#api#issues#List_All_comments	autoload/github/api/issues.vim	/^function! github#api#issues#List_All_comments(owner,repo,sort,desc,since) abort$/;"	f
github#api#issues#List_All_for_Repo	autoload/github/api/issues.vim	/^function! github#api#issues#List_All_for_Repo(owner,repo) abort$/;"	f
github#api#issues#List_All_for_User	autoload/github/api/issues.vim	/^function! github#api#issues#List_All_for_User(user,password) abort$/;"	f
github#api#issues#List_All_for_User_In_Org	autoload/github/api/issues.vim	/^function! github#api#issues#List_All_for_User_In_Org(org,user,password) abort$/;"	f
github#api#issues#List_assignees	autoload/github/api/issues.vim	/^function! github#api#issues#List_assignees(owner,repo) abort$/;"	f
github#api#issues#List_comments	autoload/github/api/issues.vim	/^function! github#api#issues#List_comments(owner,repo,num,since) abort$/;"	f
github#api#issues#List_events	autoload/github/api/issues.vim	/^function! github#api#issues#List_events(owner,repo,num) abort$/;"	f
github#api#issues#List_events_for_repo	autoload/github/api/issues.vim	/^function! github#api#issues#List_events_for_repo(owner,repo) abort$/;"	f
github#api#issues#Lock	autoload/github/api/issues.vim	/^function! github#api#issues#Lock(owner,repo,num,user,password) abort$/;"	f
github#api#issues#Removeassignee	autoload/github/api/issues.vim	/^function! github#api#issues#Removeassignee(owner,repo,num,assignees,user,password) abort$/;"	f
github#api#issues#Unlock	autoload/github/api/issues.vim	/^function! github#api#issues#Unlock(owner,repo,num,user,password) abort$/;"	f
github#api#issues#UpdateMilestone	autoload/github/api/issues.vim	/^function! github#api#issues#UpdateMilestone(owner,repo,num,milestone,user,password) abort$/;"	f
github#api#labels#Add	autoload/github/api/labels.vim	/^function! github#api#labels#Add(owner,repo,num,labels,user,password) abort$/;"	f
github#api#labels#Create	autoload/github/api/labels.vim	/^function! github#api#labels#Create(owner,repo,user,password,label) abort$/;"	f
github#api#labels#Delete	autoload/github/api/labels.vim	/^function! github#api#labels#Delete(owner,repo,name,user,password) abort$/;"	f
github#api#labels#Get	autoload/github/api/labels.vim	/^function! github#api#labels#Get(owner,repo,name) abort$/;"	f
github#api#labels#GetAll	autoload/github/api/labels.vim	/^function! github#api#labels#GetAll(owner,repo) abort$/;"	f
github#api#labels#List	autoload/github/api/labels.vim	/^function! github#api#labels#List(owner,repo,num) abort$/;"	f
github#api#labels#ListAllinMilestone	autoload/github/api/labels.vim	/^function! github#api#labels#ListAllinMilestone(owner,repo,num) abort$/;"	f
github#api#labels#Remove	autoload/github/api/labels.vim	/^function! github#api#labels#Remove(owner,repo,num,name,user,password) abort$/;"	f
github#api#labels#RemoveAll	autoload/github/api/labels.vim	/^function! github#api#labels#RemoveAll(owner,repo,num,user,password) abort$/;"	f
github#api#labels#Replace	autoload/github/api/labels.vim	/^function! github#api#labels#Replace(owner,repo,num,labels,user,password) abort$/;"	f
github#api#labels#Update	autoload/github/api/labels.vim	/^function! github#api#labels#Update(owner,repo,user,password,label) abort$/;"	f
github#api#orgs#CheckMembership	autoload/github/api/orgs.vim	/^function! github#api#orgs#CheckMembership(org,username,user,password) abort$/;"	f
github#api#orgs#CheckPublicMembership	autoload/github/api/orgs.vim	/^function! github#api#orgs#CheckPublicMembership(org,username) abort$/;"	f
github#api#orgs#ConcealUser	autoload/github/api/orgs.vim	/^function! github#api#orgs#ConcealUser(org,user,password) abort$/;"	f
github#api#orgs#DeleteMember	autoload/github/api/orgs.vim	/^function! github#api#orgs#DeleteMember(org,username,user,password) abort$/;"	f
github#api#orgs#Edit	autoload/github/api/orgs.vim	/^function! github#api#orgs#Edit(org,orgdata,user,password) abort$/;"	f
github#api#orgs#Get	autoload/github/api/orgs.vim	/^function! github#api#orgs#Get(org) abort$/;"	f
github#api#orgs#GetMemberships	autoload/github/api/orgs.vim	/^function! github#api#orgs#GetMemberships(org,username,user,password) abort$/;"	f
github#api#orgs#ListMembers	autoload/github/api/orgs.vim	/^function! github#api#orgs#ListMembers(org,filter,role) abort$/;"	f
github#api#orgs#ListPublicMembers	autoload/github/api/orgs.vim	/^function! github#api#orgs#ListPublicMembers(org) abort$/;"	f
github#api#orgs#ListRepos	autoload/github/api/orgs.vim	/^function! github#api#orgs#ListRepos(org) abort$/;"	f
github#api#orgs#Publicize	autoload/github/api/orgs.vim	/^function! github#api#orgs#Publicize(org,user,password) abort$/;"	f
github#api#orgs#RemoveMembership	autoload/github/api/orgs.vim	/^function! github#api#orgs#RemoveMembership(org,username,user,password) abort$/;"	f
github#api#orgs#UpdateMembership	autoload/github/api/orgs.vim	/^function! github#api#orgs#UpdateMembership(org,username,user,password,role) abort$/;"	f
github#api#pulls#CheckMerged	autoload/github/api/pulls.vim	/^function! github#api#pulls#CheckMerged(owner,repo,number) abort$/;"	f
github#api#pulls#Get	autoload/github/api/pulls.vim	/^function! github#api#pulls#Get(owner,repo,number) abort$/;"	f
github#api#pulls#ListAllPRs	autoload/github/api/pulls.vim	/^function! github#api#pulls#ListAllPRs(owner,repo) abort$/;"	f
github#api#pulls#ListCommits	autoload/github/api/pulls.vim	/^function! github#api#pulls#ListCommits(owner,repo,number) abort$/;"	f
github#api#pulls#ListFiles	autoload/github/api/pulls.vim	/^function! github#api#pulls#ListFiles(owner,repo,number) abort$/;"	f
github#api#pulls#Merge	autoload/github/api/pulls.vim	/^function! github#api#pulls#Merge(owner,repo,number,msg,user,password) abort$/;"	f
github#api#pulls#create	autoload/github/api/pulls.vim	/^function! github#api#pulls#create(owner,repo,user,password,pull) abort$/;"	f
github#api#pulls#update	autoload/github/api/pulls.vim	/^function! github#api#pulls#update(owner,repo,number,pull,user,password) abort$/;"	f
github#api#repos#Response	autoload/github/api/repos.vim	/^function! github#api#repos#Response() abort$/;"	f
github#api#repos#get_repo	autoload/github/api/repos.vim	/^function! github#api#repos#get_repo(owner, repo) abort$/;"	f
github#api#repos#releases#Create	autoload/github/api/repos/releases.vim	/^function! github#api#repos#releases#Create(owner,repo,user,password, release) abort$/;"	f
github#api#search#SearchCode	autoload/github/api/search.vim	/^function! github#api#search#SearchCode(q,sort,order) abort$/;"	f
github#api#search#SearchIssues	autoload/github/api/search.vim	/^function! github#api#search#SearchIssues(q,sort,order) abort$/;"	f
github#api#search#SearchRepos	autoload/github/api/search.vim	/^function! github#api#search#SearchRepos(q,sort,order) abort$/;"	f
github#api#search#SearchUsers	autoload/github/api/search.vim	/^function! github#api#search#SearchUsers(q,sort,order) abort$/;"	f
github#api#user#AddEmails	autoload/github/api/user.vim	/^function! github#api#user#AddEmails(user,password,emails) abort$/;"	f
github#api#user#CheckFollowing	autoload/github/api/user.vim	/^function! github#api#user#CheckFollowing(username,user,password) abort$/;"	f
github#api#user#DeleteEmails	autoload/github/api/user.vim	/^function! github#api#user#DeleteEmails(user,password,emails) abort$/;"	f
github#api#user#EditOrgMembership	autoload/github/api/user.vim	/^function! github#api#user#EditOrgMembership(org,state,user,password) abort$/;"	f
github#api#user#Follow	autoload/github/api/user.vim	/^function! github#api#user#Follow(username,user,password) abort$/;"	f
github#api#user#GetFollowers	autoload/github/api/user.vim	/^function! github#api#user#GetFollowers(user,password) abort$/;"	f
github#api#user#GetOrgMembership	autoload/github/api/user.vim	/^function! github#api#user#GetOrgMembership(user,password,org) abort$/;"	f
github#api#user#GetUser	autoload/github/api/user.vim	/^function! github#api#user#GetUser(username,password) abort$/;"	f
github#api#user#ListEmails	autoload/github/api/user.vim	/^function! github#api#user#ListEmails(user,password) abort$/;"	f
github#api#user#ListFollowing	autoload/github/api/user.vim	/^function! github#api#user#ListFollowing(auth) abort$/;"	f
github#api#user#ListOrgs	autoload/github/api/user.vim	/^function! github#api#user#ListOrgs(auth) abort$/;"	f
github#api#user#UnFollow	autoload/github/api/user.vim	/^function! github#api#user#UnFollow(username,user,password) abort$/;"	f
github#api#user#UpdateUser	autoload/github/api/user.vim	/^function! github#api#user#UpdateUser(data,user,password) abort$/;"	f
github#api#users#CheckTargetFollow	autoload/github/api/users.vim	/^function! github#api#users#CheckTargetFollow(username,target) abort$/;"	f
github#api#users#GetAllUsers	autoload/github/api/users.vim	/^function! github#api#users#GetAllUsers() abort$/;"	f
github#api#users#GetStarred	autoload/github/api/users.vim	/^function! github#api#users#GetStarred(user) abort$/;"	f
github#api#users#GetUser	autoload/github/api/users.vim	/^function! github#api#users#GetUser(username) abort$/;"	f
github#api#users#ListAllOrgs	autoload/github/api/users.vim	/^function! github#api#users#ListAllOrgs(user) abort$/;"	f
github#api#users#ListFollowers	autoload/github/api/users.vim	/^function! github#api#users#ListFollowers(username) abort$/;"	f
github#api#users#ListFollowing	autoload/github/api/users.vim	/^function! github#api#users#ListFollowing(username) abort$/;"	f
github#api#users#starred	autoload/github/api/users.vim	/^function! github#api#users#starred(user,page) abort$/;"	f
github#api#users#starred_pages	autoload/github/api/users.vim	/^function! github#api#users#starred_pages(user) abort$/;"	f
github#api#util#CleanLog	autoload/github/api/util.vim	/^function! github#api#util#CleanLog() abort$/;"	f
github#api#util#Get	autoload/github/api/util.vim	/^function! github#api#util#Get(url,args) abort$/;"	f
github#api#util#GetLastPage	autoload/github/api/util.vim	/^function! github#api#util#GetLastPage(url) abort$/;"	f
github#api#util#GetLog	autoload/github/api/util.vim	/^function! github#api#util#GetLog() abort$/;"	f
github#api#util#GetStatus	autoload/github/api/util.vim	/^function! github#api#util#GetStatus(url,opt) abort$/;"	f
github#api#util#Get_current_time	autoload/github/api/util.vim	/^function! github#api#util#Get_current_time() abort$/;"	f
github#api#util#curl#Get	autoload/github/api/util/curl.vim	/^function! github#api#util#curl#Get(url,opt) abort$/;"	f
github#api#util#log	autoload/github/api/util.vim	/^function! github#api#util#log(log) abort$/;"	f
github#api#util#parserArgs	autoload/github/api/util.vim	/^function! github#api#util#parserArgs(base,name,var,values,default) abort$/;"	f
notification_reason	autoload/github/api/activity.vim	/^function! s:notification_reason(n) abort$/;"	f
parser	autoload/github/api/search.vim	/^function! s:parser(q,scopes) abort$/;"	f
parser	autoload/github/api/util/curl.vim	/^fu! s:parser(res) abort$/;"	f
s:User	autoload/github/api/obj.vim	/^let s:User = {}$/;"	v
s:code_scopes	autoload/github/api/search.vim	/^let s:code_scopes = {$/;"	v
s:issues_scopes	autoload/github/api/search.vim	/^let s:issues_scopes = {$/;"	v
s:log	autoload/github/api/util.vim	/^let s:log = []$/;"	v
s:repo_scopes	autoload/github/api/search.vim	/^let s:repo_scopes = {$/;"	v
s:save_cpo	autoload/github/api/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/github.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:users_scopes	autoload/github/api/search.vim	/^let s:users_scopes = {$/;"	v
systemlist	autoload/github/api/util.vim	/^function! s:systemlist(cmd) abort$/;"	f
